#/usr/bin/env bash

########################
# Firebird Configuration
########################

AARDVARK=<http://host:port>

CASSANDRA_CONTACT_POINTS=<CASSANDRA_HOST>
CASSANDRA_USER=<CASSANDRA_USER>
CASSANDRA_SECRET=<CASSANDRA_SECRET>
CASSANDRA_KEYSPACE=<CASSANDRA_KEYSPACE>

MESOS_PRINCIPAL=<MESOS_USER>
MESOS_SECRET=<MESOS_SECRET>
MESOS_ROLE=<MESOS_ROLE>

# Resource requests
CORES=50
DRIVER_MEMORY=5g
EXECUTOR_MEMORY=15g

PYSPARK_CORES=50
PYSPARK_DRIVER_MEMORY=4g
PYSPARK_EXECUTOR_MEMORY=20g

# Chip query parallelism
INITIAL_PARTITION_COUNT=4
# Product generation parallelism.  Should be CORES * 4 or CORES * 8.
# Keep partitions below 128MB each.
PRODUCT_PARTITION_COUNT=100
# Result storage parallelism
STORAGE_PARTITION_COUNT=10

#MASTER=local[*]
MASTER=<mesos://zk://host1:2181,host2:2181,host3:2181/mesos>

IMAGE=<usgseros/lcmap-firebird:2017.09.18>

VOLUME=`echo ~/keys`:/certs

FIREBIRD_USER=$USER
############################
# End Firebird Configuration
############################

TIMESTAMP=`date --iso-8601=seconds`

BASE="docker run \
-it --rm \
-e TINI_SUBREAPER=true \
-e LIBPROCESS_SSL_ENABLED=1 \
-e LIBPROCESS_SSL_SUPPORT_DOWNGRADE=1 \
-e LIBPROCESS_SSL_VERIFY_CERT=0 \
-e LIBPROCESS_SSL_ENABLE_SSL_V3=0 \
-e LIBPROCESS_SSL_ENABLE_TLS_V1_0=0 \
-e LIBPROCESS_SSL_ENABLE_TLS_V1_1=0 \
-e LIBPROCESS_SSL_ENABLE_TLS_V1_2=1 \
-e LIBPROCESS_SSL_CERT_FILE=/certs/mesos.crt \
-e LIBPROCESS_SSL_KEY_FILE=/certs/mesos.key \
-e LIBPROCESS_SSL_CA_FILE=/certs/TrustedRoot.crt \
-e LIBPROCESS_SSL_CA_DIR=/certs \
-e LIBPROCESS_SSL_ECDH_CURVE=auto \
-e FIREBIRD_AARDVARK=$AARDVARK \
-e FIREBIRD_CASSANDRA_CONTACT_POINTS=$CASSANDRA_CONTACT_POINTS \
-e FIREBIRD_CASSANDRA_USER=$CASSANDRA_USER \
-e FIREBIRD_CASSANDRA_PASS=$CASSANDRA_SECRET \
-e FIREBIRD_CASSANDRA_KEYSPACE=$CASSANDRA_KEYSPACE \
-e FIREBIRD_INITIAL_PARTITION_COUNT=$INITIAL_PARTITION_COUNT \
-e FIREBIRD_PRODUCT_PARTITION_COUNT=$PRODUCT_PARITION_COUNT \
-e FIREBIRD_STORAGE_PARTITION_COUNT=$STORAGE_PARTITION_COUNT \
-e FIREBIRD_LOG_LEVEL=WARN \
-e FIREBIRD_USER=$FIREBIRD_USER \
--publish-all \
--network=host \
--pid=host \
-v $VOLUME \
$IMAGE"

alias firebird-version="$BASE firebird show version"
alias firebird-products="$BASE firebird show products"
alias firebird-notebook="$BASE jupyter --ip=$HOSTNAME notebook --allow-root"
alias firebird-shell="$BASE /bin/bash"


# Spark runtime configuration options are available at
# https://spark.apache.org/docs/latest/configuration.html
#

# --driver-memory $DRIVER_MEMORY \
# --executor-memory $EXECUTOR_MEMORY \

alias firebird-save="$BASE spark-submit \
--master $MASTER \
--total-executor-cores $CORES \
--conf spark.app.name=$FIREBIRD_USER:firebird-save:[$TIMESTAMP] \
--conf spark.driver.host=$HOSTNAME \
--conf spark.mesos.principal=$MESOS_PRINCIPAL \
--conf spark.mesos.secret=$MESOS_SECRET \
--conf spark.mesos.role=$MESOS_ROLE \
--conf spark.mesos.executor.docker.image=$IMAGE \
--conf spark.mesos.executor.docker.forcePullImage=true \
--conf spark.mesos.task.labels=firebird-save:$FIREBIRD_USER \
/home/lcmap/firebird/cmdline.py save"


alias firebird-pyspark="$BASE pyspark \
--master $MASTER \
--total-executor-cores $PYSPARK_CORES \
--driver-memory $PYSPARK_DRIVER_MEMORY \
--executor-memory $PYSPARK_EXECUTOR_MEMORY \
--conf spark.app.name=$FIREBIRD_USER \
--conf spark.driver.host=$HOSTNAME \
--conf spark.mesos.principal=$MESOS_PRINCIPAL \
--conf spark.mesos.secret=$MESOS_SECRET \
--conf spark.mesos.role=$MESOS_ROLE \
--conf spark.mesos.executor.docker.image=$IMAGE \
--conf spark.mesos.executor.docker.forcePullImage=true \
--conf spark.mesos.task.labels=firebird-pyspark:$FIREBIRD_USER \
-v"
